datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
}

model Account {
  id                 String  @id @default(cuid())
  userId             String
  type               String
  provider           String
  providerAccountId  String
  refresh_token      String?  @db.Text
  access_token       String?  @db.Text
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?  @db.Text
  session_state      String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  isActive      Boolean   @default(true)
  accounts      Account[]
  sessions      Session[]
  @@map("users")
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
  @@map("verification_tokens")
}

model Product {
  id            String    @id @default(cuid())
  code          String    @unique
  name          String 
  description   String?
  price         Float 
  quantity      Float
  unit          String
  createdAt     DateTime   @default(now()) @map("created_at")
  updatedAt     DateTime   @updatedAt @map("updated_at")
  @@map("products")
}

model Transaction {
  id            String      @id @default(cuid())
  description   String      @db.Text
  amount        Float
  createdBy     String      @map("created_by")
  createdAt     DateTime    @default(now()) @map("created_at")
  @@map("transactions")
}

model Log {
  id  Int   @id @default(autoincrement())
  date     DateTime    @default(now())
  description String
  user String
  @@map("logs")
}